# automatically generated by generate_docs.py.
doc="""Attributes supported by this class are:
cluster_sep(type:length in points (\\xref{unit})) default="The separation between
    clustered boxes.".
error_plus_col(type:int) default="The depth of the errorbar is extracted from 
                  this column in data. This attribute is meaningful only
                  when error_bar != None.".
direction(type:str) default="The direction the growth of the bars. The value is either 'horizontal'
                   or 'vertical'.".
legend_line_style(type:line_style.T) default="The line style used to draw a legend entry. Usually, the value is None, meaning that the value of "line_style" attribute is used.".
error_bar(type:error_bar.T) default="Specifies the style of the error bar. <<error_bar>>".
data_label_format(type:printf format string) default="The
                          format string for the label displayed besides each
                          bar.  It can be a `printf' style format
                          string, or a two-parameter function that
                          takes (x,y) values and returns a string. The appearance of the string produced here can be
controlled using escape sequences. <<font>>".
width(type:length in points (\\xref{unit})) default="Width of each box. 
@cindex width, bar chart
@cindex size, bar chart
".
bcol(type:int) default="Specifies the column from which base values (i.e., X values when attribute "direction" is "vertical", Y values otherwise) are extracted.
The
              combination of "data", "bcol", and "hcol" attributes defines
              the set of boxes drawn by this chart. See the
              below example:
              
@example
              d = [[5,10], [7,22], [8,25]]
              p = bar_plot.T(data = d, bcol = 1, hcol = 2)
@end example

              Here, three bars will be drawn. The X values of the bars
              will be 5, 7, and 8. The Y values of the bars will be
              10, 22, and 25, respectively. (In practice, because
              the values of bcol and hcol defaults to 1 and 2, you can
              write the above example just as "p = bar_plot.T(data = d)".
              ".
qerror_minus_col(type:int) default="The depth of the "quartile" errorbar is extracted from 
                  this column in data. This attribute is meaningful only
                  when error_bar != None. ".
_abs_data(type:list) default="Used only internally.".
label(type:str) default="The label to be displayed in the legend. <<legend>>, <<font>>".
cluster(type:tuple) default="This attribute is used to
    cluster multiple bar plots side by side in a single chart.
    The value should be a tuple of two integers. The second value should be equal to the total number of bar plots in the chart. The first value should be the relative position of this chart; 0 places this chart the leftmost, and N-1
    (where N is the 2nd value of this attribute) places this chart the rightmost. Consider the below example:

@example
    a = area.T(...)
    p1 = bar_plot.T(data = [[1,20][2,30]], cluster=(0,2))
    p2 = bar_plot.T(data = [[1,25],[2,10]], cluster=(1,2))
    a.add_plot(p1, p2)
    a.draw()
@end example

    In this example, one group of bars will be drawn side-by-side at
    position x=1, one with height 20, the other with height 25. The
    other two bars will be drawn side by side at position x=2, one
    with height 30 and the other with height 10.
    ".
hcol(type:int) default="The column from which the height of each bar is extracted.
             See also the description of the 'bcol' attribute.".
stack_on(type:any) default="The value must be either None or bar_plot.T. If not None, bars of this plot are stacked on top of another bar plot.".
qerror_plus_col(type:int) default="The depth of the "quartile" errorbar is extracted from 
                  this column in data. This attribute is meaningful only
                  when error_bar != None.".
data_label_offset(type:(x,y)) default="The location of data labels relative to the sample point. See also attribute data_label_format.".
fill_style(type:fill_style.T) default="Defines the fill style of each box.".
    The style is picked from standard styles round-robin.
    
data(type:any) default="Specifies the data points. <<chart_data>>".
line_style(type:line_style.T) default="The style of the outer frame of each box.".
legend_fill_style(type:fill_style.T) default="The fill style used to draw a legend entry. Usually, the value is None, meaning that the value of "fill_style" attribute is used.".
error_minus_col(type:int) default="Specifies the column from which the depth of the errorbar is extracted.  This attribute is meaningful only when
                  error_bar != None.
                  ".
"""

